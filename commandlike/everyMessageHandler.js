const
    Command = require('../commands/command'),
    common = require('../scripts/common');

class EveryMessageHandler extends Command {
    execute() {
        // Automatic chocolate ice cream emoji.
        if (this.serverID && typeof common.settings.servers[this.serverID].autoShit == 'string' &&
            this.bot.servers[this.serverID].members[this.userID] &&
            this.bot.servers[this.serverID].members[this.userID].roles.indexOf(common.settings.servers[this.serverID].autoShit) != -1 &&
            this.pc.userHasPerm(this.serverID, this.bot.id, 'TEXT_ADD_REACTIONS')
        ) this.emojiResponse('💩');

        // Add reactions to bot's own embeds.
        if (this.userID == this.bot.id && this.evt.d.embeds[0]) {
            const reactionList = [];
            // Only vote embed
            if (this.evt.d.embeds[0].footer && this.evt.d.embeds[0].footer.text == 'Vote generated by your\'s truly.') {
                for (const field of this.evt.d.embeds[0].fields) {
                    if (field.value.substring(field.value.length - 1) == '>') field.value = field.value.substring(0, field.value.length - 1);
                    reactionList.push(field.value);
                }

                this.bot.pinMessage({
                    channelID: this.channelID,
                    messageID: this.evt.d.id
                }, err => { if (err) common.logger.error(err, { label: 'actions/selfEmbed' }); });
            }

            // Only bs embed
            if (this.evt.d.embeds[0].title == 'Blue Squares: The Game') {
                reactionList.push('🔼', '▶', '🔽', '◀', '❌');
            }

            // Only osu! embeds
            switch (common.osuEmbedIdentifier(this.evt.d.embeds[0])) {
                case 'profile':
                    reactionList.push('🏆', '🕒');
                    break;
                case 'top':
                    reactionList.push('➕');
                    break;
                default:
            }

            // Send reactions every half-second.
            for (let i = 0; i < reactionList.length; i++) setTimeout(emoji => this.emojiResponse(emoji), i * 500, reactionList[i]);
        }

        // Word detection
        for (const word of this.message.split(' ')) {
            if (word.substring(0, 2) === 'r/') this.msg(this.channelID, `https://reddit.com/${ word }`);
        }
    }
}

module.exports = EveryMessageHandler;
