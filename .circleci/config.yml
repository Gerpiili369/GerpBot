version: 2
jobs:
  build:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: linter
          command: npm run linter
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: Update ssh
          command: |
            apt install openssh-server
      - run:
          name: Pull latest changes
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH && git pull"
      - run:
          name: Update packages
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH && npm i"
      - run:
          name: Restart process
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH && pm2 restart $DEPLOY_ID"
  deploy-dev:
    machine:
      enabled: true
    steps:
      - run:
          name: Update ssh
          command: |
            apt install openssh-server
      - run:
          name: Pull latest changes
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH_DEV && git pull"
      - run:
          name: Checkout correct development branch
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH_DEV && git checkout $CIRCLE_BRANCH"
      - run:
          name: Update packages
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH_DEV && npm i"
      - run:
          name: Restart process
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH_DEV && pm2 restart $DEPLOY_ID_DEV"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              ignore: master
